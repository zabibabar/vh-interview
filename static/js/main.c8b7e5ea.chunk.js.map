{"version":3,"sources":["theme.js","components/Film.jsx","components/FilmList.jsx","components/Character.jsx","components/CharacterList.jsx","App.jsx","index.js"],"names":["palette","type","primary","main","overrides","MuiCssBaseline","body","background","process","useStyles","makeStyles","theme","root","borderColor","color","cursor","Film","title","releaseYear","handleFilmSelect","classes","Card","className","variant","onClick","CardContent","Typography","component","align","FilmList","films","Grid","container","spacing","justify","map","film","item","key","episode_id","xs","sm","md","lg","release_date","split","Character","name","backdrop","zIndex","drawer","CharacterList","charactersURL","useState","list","isFetching","characters","setCharacters","useEffect","a","URLs","URL","axios","get","replace","all","response","fetchCharacters","Backdrop","open","CircularProgress","character","data","url","width","margin","flex","logo","display","button","app","React","createElement","myTheme","createMuiTheme","muiTheme","setFilms","selectedFilm","setSelectedFilm","results","fetchFilms","filmToSelect","find","ThemeProvider","CssBaseline","Container","src","alt","Object","keys","length","constructor","Box","flexWrap","Button","endIcon","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8b7e5ea.chunk.js","sourcesContent":["export default {\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: '#f3c20f',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        body: {\r\n          background: `url(${process.env.PUBLIC_URL}/star-bg.jpg) no-repeat center center fixed`,\r\n          '-webkit-background-size': 'cover',\r\n          '-moz-background-size': 'cover',\r\n          '-o-background-size': 'cover',\r\n          'background-size': 'cover',\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: 'none',\r\n    borderColor: theme.palette.primary.main,\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}));\r\nexport default function Film({ title, releaseYear, handleFilmSelect }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      onClick={() => handleFilmSelect(title)}\r\n    >\r\n      <CardContent>\r\n        <Typography variant=\"h6\" component=\"h2\" align=\"center\">\r\n          {title}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" component=\"p\" align=\"center\">\r\n          {releaseYear}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nFilm.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  releaseYear: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n    .isRequired,\r\n  handleFilmSelect: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport Film from './Film';\r\n\r\nexport default function FilmList({ films, handleFilmSelect }) {\r\n  return (\r\n    <Grid container spacing={3} justify=\"center\">\r\n      {films.map((film) => (\r\n        <Grid item key={film.episode_id} xs={12} sm={6} md={4} lg={3}>\r\n          <Film\r\n            title={film.title}\r\n            releaseYear={film.release_date.split('-')[0]}\r\n            handleFilmSelect={handleFilmSelect}\r\n          />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nFilmList.propTypes = {\r\n  films: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n  handleFilmSelect: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: 'none',\r\n    borderColor: theme.palette.primary.main,\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Character({ name }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h6\" component=\"h2\" align=\"center\">\r\n          {name}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nCharacter.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Character from './Character';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function CharacterList({ charactersURL = [] }) {\r\n  const classes = useStyles();\r\n  const [characters, setCharacters] = useState({ list: [], isFetching: false });\r\n\r\n  useEffect(() => {\r\n    async function fetchCharacters() {\r\n      try {\r\n        setCharacters({ list: [], isFetching: true });\r\n        const URLs = charactersURL.map((URL) =>\r\n          axios.get(URL.replace('http', 'https'))\r\n        );\r\n        const response = await axios.all(URLs);\r\n        setCharacters({ list: response, isFetching: false });\r\n      } catch (e) {\r\n        setCharacters({ list: [], isFetching: false });\r\n      }\r\n    }\r\n    fetchCharacters();\r\n  }, [charactersURL]);\r\n  return (\r\n    <>\r\n      <Backdrop className={classes.backdrop} open={characters.isFetching}>\r\n        <CircularProgress />\r\n      </Backdrop>\r\n      <Grid container spacing={3}>\r\n        {characters.list.map((character) => (\r\n          <Grid item key={character.data.url} xs={12} sm={6} md={4} lg={3}>\r\n            <Character name={character.data.name} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nCharacterList.propTypes = {\r\n  charactersURL: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  makeStyles,\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n} from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nimport muiTheme from './theme';\r\nimport FilmList from './components/FilmList';\r\nimport CharacterList from './components/CharacterList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    width: '100%',\r\n    margin: theme.spacing(0, 'auto', 1, 'auto'),\r\n    flex: '1 0 auto',\r\n  },\r\n  logo: {\r\n    width: 128,\r\n    display: 'block',\r\n    margin: theme.spacing(0, 'auto'),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const myTheme = createMuiTheme(muiTheme);\r\n  const classes = useStyles();\r\n  const [films, setFilms] = useState({ list: [], isFetching: false });\r\n  const [selectedFilm, setSelectedFilm] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchFilms() {\r\n      try {\r\n        setFilms({ list: [], isFetching: true });\r\n        const response = await axios.get('https://swapi.dev/api/films/');\r\n        setFilms({ list: response.data.results, isFetching: false });\r\n      } catch (e) {\r\n        setFilms({ list: [], isFetching: false });\r\n      }\r\n    }\r\n    fetchFilms();\r\n  }, []);\r\n\r\n  const handleFilmSelect = (title = '') => {\r\n    let filmToSelect = {};\r\n    if (title !== '') {\r\n      filmToSelect = films.list.find((film) => film.title === title);\r\n    }\r\n    setSelectedFilm(filmToSelect);\r\n  };\r\n  return (\r\n    <ThemeProvider theme={myTheme}>\r\n      <CssBaseline />\r\n      <Container>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/starwars.png`}\r\n          className={classes.logo}\r\n          alt=\"star wars logo\"\r\n        />\r\n        <Backdrop className={classes.backdrop} open={films.isFetching}>\r\n          <CircularProgress />\r\n        </Backdrop>\r\n        {Object.keys(selectedFilm).length === 0 &&\r\n        selectedFilm.constructor === Object ? (\r\n          <FilmList films={films.list} handleFilmSelect={handleFilmSelect} />\r\n        ) : (\r\n          <>\r\n            <Box display=\"flex\" flexWrap=\"wrap\">\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"h4\"\r\n                component=\"h1\"\r\n                className={classes.title}\r\n              >\r\n                {`${selectedFilm.title} (${\r\n                  selectedFilm.release_date.split('-')[0]\r\n                })`}\r\n              </Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => handleFilmSelect()}\r\n                color=\"primary\"\r\n                endIcon={<ArrowBackIosIcon />}\r\n                className={classes.button}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Box>\r\n            <CharacterList charactersURL={selectedFilm.characters} />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst app = React.createElement(App);\r\nReactDOM.render(app, document.getElementById('root'));\r\n"],"sourceRoot":""}